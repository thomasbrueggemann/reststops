@using Reststops.Presentation.Web.Services;
@using Reststops.Core;
@using Reststops.Core.Entities
@using Reststops.Presentation.Web.DTO

@inject BrowserService browserService

@if (!string.IsNullOrEmpty(staticMapUrl))
{
    <img src="@staticMapUrl" />
}

@code {
    [Parameter] public double? StartLatitude { get; set; }
    [Parameter] public double? StartLongitude { get; set; }
    [Parameter] public double? EndLatitude { get; set; }
    [Parameter] public double? EndLongitude { get; set; }
    [Parameter] public string RouteEncodedPolyline { get; set; }
    [Parameter] public IEnumerable<ReststopResult> Reststops { get; set; }

    private string staticMapUrl { get; set; }

    private async Task UpdateStaticMap()
    {
        var dimension = await browserService.GetDimensions();
        int width = Math.Min(dimension.Width, 1280);

        var staticMap = new MapboxStaticMap(Constants.MAPBOX_TOKEN)
            .SetStyle("streets-v11")
            .SetDimensions(width, 300);

        if (StartLatitude.HasValue && StartLongitude.HasValue)
        {
            staticMap.AddMarker(new MapboxStaticMap.Marker()
            {
                ColorCode = "77E105",
                Label = "1",
                Type = MapboxStaticMap.MarkerType.PIN_L,
                Latitude = StartLatitude.Value,
                Longitude = StartLongitude.Value
            });
        }

        if (EndLatitude.HasValue && EndLongitude.HasValue)
        {
            staticMap.AddMarker(new MapboxStaticMap.Marker()
            {
                ColorCode = "FF0000",
                Label = "2",
                Type = MapboxStaticMap.MarkerType.PIN_L,
                Latitude = EndLatitude.Value,
                Longitude = EndLongitude.Value
            });
        }

        if (!string.IsNullOrWhiteSpace(RouteEncodedPolyline))
        {
            staticMap.AddPath(new MapboxStaticMap.Path()
            {
                Polyline = RouteEncodedPolyline,
                StrokeColor = "FF0000",
                StrokeWidth = 3,
                StrokeOpacity = 0.8
            });
        }

        if (Reststops != null)
        {
            foreach (ReststopResult reststop in Reststops)
            {
                staticMap.AddMarker(new MapboxStaticMap.Marker()
                {
                    ColorCode = "bfbfbf",
                    Type = MapboxStaticMap.MarkerType.PIN_S,
                    Latitude = reststop.Latitude,
                    Longitude = reststop.Longitude
                });
            }
        }

        staticMapUrl = staticMap.ToString();
    }

    protected override async Task OnInitializedAsync() => await UpdateStaticMap();
    protected override async Task OnParametersSetAsync() => await UpdateStaticMap();
}